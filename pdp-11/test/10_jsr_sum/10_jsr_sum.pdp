    . = 100                     ; данные располагаются с 100 адреса
A:  .WORD 34, 12, -1, 66, 0     ; массив (А - константа, равна адресу 100), сумма = 133, так как все числа восьмеричные

    .=1000                     ; код располагается с 1000 адреса
main:
	mov #main, sp
    mov #A, R2                 ; R2 - адрес начала массива
    clr R0                     ; R0 = 0
    jsr pc, sum
    halt
    
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; RECURSIVELY sum 1 data in the A array and store the sum into R0
;    R0 - sum
;    R2 - address
;    R3 - (byte)A[R1]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
sum:
    mov (R2)+, R3              ; R3 = *R2; R2++ записывает в R3 число, лежащее по адресу, хранимому в R2, этот адрес увеличивается
    beq END                    ; дошли до 0 и дальше в рекурсию не углубляемся
    add R3, R0                 ; очередное число прибавляется к текущей сумме
    jsr pc, sum                ; следующий вызов функции должен суммировать следующее число
END:    
    rts pc
