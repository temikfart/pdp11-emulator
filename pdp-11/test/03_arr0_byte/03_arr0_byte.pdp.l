000000:		    . = 100                     ; данные располагаются с 100 адреса
000100:		A:  .BYTE 34, 12, -1, 66, 0     ; массив (А - константа, равна адресу 100), сумма = 133, так как все числа восьмеричные
	    034
	 012
	    377
	 066
	    000
000105:		
000105:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000105:		; Sum all data in the A array and store the summ into R0
000105:		;    R0 - sum
000105:		;    R2 - address
000105:		;    R3 - (byte)A[R1]
000105:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
000105:		    .=1000                     ; код располагается с 1000 адреса
001000:		    mov #A, R2                 ; R2 - адрес начала массива
	 012702
	 000100
001004:		    clr R0                     ; R0 = 0
	 005000
001006:		    
001006:		LOOP:
001006:		    movb (R2)+, R3             ; R3 = *R2; R2++ записывает в R3 число, лежащее по адресу, хранимому в R2, этот адрес увеличивается
	 112203
001010:		    beq END
	 001402
001012:		    add R3, R0                 ; очередное число прибавляется к текущей сумме
	 060300
001014:		    br LOOP
	 000774
001016:		END:    
001016:		    halt
	 000000
