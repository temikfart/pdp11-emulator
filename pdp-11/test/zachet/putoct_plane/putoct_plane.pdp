; print only the one oct number
ocsr = 0177564	; TTO command and status register for PDP-11
odat = 0177566  ; TTO data register

. = 200
A:  .WORD   123456, 165432, 1, 2, 3, 4, 5, -1, 10, 20, 40, 100, 1000, 100000, 6543, 0

. = 1000

main: mov	#main,sp	; init stack

    mov #A, r5
loop:
    mov (r5)+, r0
    beq end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; put8  show number in tto in octet representation
;   input:	RO
;   output:	tto
;   clobber:	flags, r0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
put8:	
	mov	r1,-(sp)	; save r1 in stack
	mov	r2,-(sp)	; save r2 in stack

	mov	r0,r1		; copy number to r1
	mov	#5, r2		; 16 bit's counter		

	movb	#'0, r0		; put char '0'
	tst	r1
	bpl	put8_0
	inc	r0

put8_0:	; jsr	pc, putchar	
    tstb	@#ocsr	; test bit 7 in ocsr (it's sign bit!!!)
	bpl	put8_0		; if ( bit 7 == 0 ) wait ... device is busy
	movb	r0,@#odat	; put char to the odat

put8_2:	mov	r1, r0	
	rol	r0
	rol	r0
	rol	r0
	rol	r0
	rol	r0
	bic	#~7, r0 
	add	#'0, r0		; put char '0'
	;jsr	pc, putchar
putc2:
    tstb	@#ocsr	; test bit 7 in ocsr (it's sign bit!!!)
	bpl	putc2		; if ( bit 7 == 0 ) wait ... device is busy
	movb	r0,@#odat	; put char to the odat
    
	asl	r1
	asl	r1
	asl	r1
	sob	r2, put8_2 
	
	;mov	(sp)+,r2	; restore r2 from stack
	;mov	(sp)+,r1	; restore r1 from stack
	;rts	pc		; return

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; new line
    mov #12, r0
putc12:
    tstb	@#ocsr
	bpl	putc12	
	movb	r0,@#odat

    mov #15, r0
putc15:
    tstb	@#ocsr
	bpl	putc15	
	movb	r0,@#odat


    br loop
end:
	halt


