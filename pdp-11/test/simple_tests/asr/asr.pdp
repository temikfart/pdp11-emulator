; expected:
; r0=000204 r2=005162 r4=105705 sp=000000
; r1=151627 r3=051451 r5=000000 pc=001036
; psw=000011: cm=k pm=k pri=0   n  c [10]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Реализовать команду ASR и ASRB
; Двоичный код ASR:  0 000 110 010 ddd ddd
; Двоичный код ASRB: 1 000 110 010 ddd ddd
; Формат ассемблера: ASR dst
; Формат ассемблера: ASRB dst
; Сдвинуть dst на 1 бит вправо. Старший бит повторяется. 
; Сдвинутый младший бит записывается в С.
; N, Z - по результату операции
; V = N xor C
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; oct: 123456
; test1
; bin:   1 010 011 100 101 110 123456
; asr:   1 101 001 110 010 111 151627
; test2
; bin:   0 001 010 011 100 101 012345
; asr:   0 000 101 001 110 010 005162
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    .=200
A:  .WORD  123456, 012345
B:  .BYTE  123, 123
C:  .BYTE  213, 213

    .=1000
    mov #A, R0      ; R0 = 200
    mov (R0)+, R1   ; R1 = 123456
    mov (R0)+, R2   ; R2 = 012345
    
    asr R1          ; R1 = 151627
    asr R2          ; R1 = 005162
    
    asrb @#B        ; [204] = 01 010 011 -> 00 101 001 = 051
    asrb @#C        ; [206] = 10 001 011 -> 11 000 101 = 305
    
    mov @#B, R3     ; [205, 204] = [0 101 001 100 101 001] = 051451
    mov @#C, R4     ; [207, 206] = [1 000 101 111 000 101] = 105705
    
    halt
