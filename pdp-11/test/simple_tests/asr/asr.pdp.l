000000:		; expected:
000000:		; r0=000204 r2=005162 r4=105705 sp=000000
000000:		; r1=151627 r3=051451 r5=000000 pc=001036
000000:		; psw=000011: cm=k pm=k pri=0   n  c [10]
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		; Реализовать команду ASR и ASRB
000000:		; Двоичный код COM:  0 000 110 010 ddd ddd
000000:		; Двоичный код COMB: 1 000 110 010 ddd ddd
000000:		; Формат ассемблера: ASR dst
000000:		; Формат ассемблера: ASRB dst
000000:		; Сдвинуть dst на 1 бит вправо. Старший бит повторяется. 
000000:		; Сдвинутый младший бит записывается в С.
000000:		; N, Z - по результату операции
000000:		; V = N xor C
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		; oct: 123456
000000:		; test1
000000:		; bin:   1 010 011 100 101 110 123456
000000:		; asr:   1 101 001 110 010 111 151627
000000:		; test2
000000:		; bin:   0 001 010 011 100 101 012345
000000:		; asr:   0 000 101 001 110 010 005162
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		
000000:		    .=200
000200:		A:  .WORD  123456, 012345
	 123456
	 012345
000204:		B:  .BYTE  123, 123
	    123
	 123
000206:		C:  .BYTE  213, 213
	    213
	 213
000210:		
000210:		    .=1000
001000:		    mov #A, R0      ; R0 = 200
	 012700
	 000200
001004:		    mov (R0)+, R1   ; R1 = 123456
	 012001
001006:		    mov (R0)+, R2   ; R2 = 012345
	 012002
001010:		    
001010:		    asr R1          ; R1 = 151627
	 006201
001012:		    asr R2          ; R1 = 005162
	 006202
001014:		    
001014:		    asrb @#B        ; [204] = 01 010 011 -> 00 101 001 = 051
	 106237
	 000204
001020:		    asrb @#C        ; [206] = 10 001 011 -> 11 000 101 = 305
	 106237
	 000206
001024:		    
001024:		    mov @#B, R3     ; [205, 204] = [0 101 001 100 101 001] = 051451
	 013703
	 000204
001030:		    mov @#C, R4     ; [207, 206] = [1 000 101 111 000 101] = 105705
	 013704
	 000206
001034:		    
001034:		    halt
	 000000
