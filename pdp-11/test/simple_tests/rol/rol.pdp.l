000000:		; expected:
000000:		; r0=000206 r2=047135 r4=000000 sp=000000
000000:		; r1=047134 r3=056514 r5=000000 pc=001026
000000:		; psw=000000: cm=k pm=k pri=0        [9]
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		; Реализовать команду rol 
000000:		; Двоичный код: 0 000 110 001 ddd ddd
000000:		; Формат ассемблера: ROL dst
000000:		; 17-битное "слово", состоящее из [флаг С, dst] циклически сдвигается
000000:		; на 1 бит влево. 
000000:		; С оказывается в самом младшем бите dst.
000000:		; Самый старший бит dst оказывается в С.
000000:		; N, Z - как обычно
000000:		; V = N xor C
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		; oct: 123456
000000:		; bin: 1 010 011 100 101 110
000000:		; test1 - rotate R1=123456 with C=0
000000:		; before: C-> 0 | 1 010 011 100 101 110 <- R1
000000:		; test1:  C-> 1 | 010 011 100 101 110 0 <- R1
000000:		; test1:  C-> 1 | 0 100 111 001 011 100 <- R1
000000:		; test1:  C-> 1 | 0   4   7   1   3   4 <- R1
000000:		; test2 - rotate R2=23456 with C=1
000000:		; before: C-> 1 | 0 010 011 100 101 110 <- R2
000000:		; test2:  C-> 0 | 010 011 100 101 110 1 <- R2
000000:		; test2:  C-> 0 | 0 100 111 001 011 101 <- R2
000000:		; test2:  C-> 0 | 0   4   7   1   3   5 <- R2
000000:		; test3 - rotate byte at 200 and then rotate byte at 201
000000:		; [201, 200] = 123456
000000:		; [C, 201, 200] = 0 1 010 011 100 101 110 = [0],[1010 0111],[0010 1110]
000000:		; rol 202: C-> 0 10 100 110  <- 202 (before)
000000:		; rol 202: C-> 1 0 100 1100 <- 202 (after)
000000:		; rol 203: C-> 1 0010 1110  <- 203 (before) 
000000:		; rol 203: C-> 0 010 1110 1 <- 203 (after)
000000:		; [203,202] = [010 1110 1] [0 100 1100] = [0 101 110 101 001 100] = 56514
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		
000000:		    .=200
000200:		A:  .WORD  123456, 023456
	 123456
	 023456
000204:		B:  .BYTE  246, 56  ; [10 100 110], [00 101 110]  
	    246
	 056
000206:		
000206:		
000206:		    .=1000
001000:		    mov #A, R0      ; R0 = 200
	 012700
	 000200
001004:		    mov (R0)+, R1     ; R1 = 12345
	 012001
001006:		    mov (R0)+, R2     ; R2 = 02345
	 012002
001010:		    
001010:		    rol R1          ; R1 = 047134
	 006101
001012:		    rol R2          ; R2 = 047135
	 006102
001014:		    
001014:		    rolb (R0)+      ; 0 100 1100 - little
	 106120
001016:		    rolb (R0)+      ; 010 1110 1 - big
	 106120
001020:		    
001020:		    mov @#B, R3     ; 010 1110 1  0 100 1100 = 0 101 110 101 001 100 = 56514
	 013703
	 000204
001024:		    
001024:		    halt
	 000000
