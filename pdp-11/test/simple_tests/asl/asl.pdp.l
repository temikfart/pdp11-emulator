000000:		; expected:
000000:		; r0=000202 r2=000000 r4=051646 sp=000000
000000:		; r1=047136 r3=177646 r5=000000 pc=001020
000000:		; psw=000000: cm=k pm=k pri=0        [7]
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		; Реализовать команду ASL и ASLB
000000:		; Двоичный код COM:  0 000 110 011 ddd ddd
000000:		; Двоичный код COMB: 1 000 110 011 ddd ddd
000000:		; Формат ассемблера: ASL dst
000000:		; Формат ассемблера: ASLB dst
000000:		; Сдвинуть dst на 1 бит влево. Дополнить младший бит 0. 
000000:		; Сдвинутый старший бит записывается в С.
000000:		; N, Z - по результату операции
000000:		; V = N xor C
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		; oct: 123457
000000:		; bin:   1 010 011 100 101 111 123457
000000:		; asl: 1 0 100 111 001 011 110 047136
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		
000000:		    .=200
000200:		A:  .WORD  123457
	 123457
000202:		B:  .BYTE  123, 123
	    123
	 123
000204:		
000204:		    .=1000
001000:		    mov #A, R0      ; R0 = 200
	 012700
	 000200
001004:		    mov (R0)+, R1   ; R1 = 123457
	 012001
001006:		     
001006:		    asl R1          ; R1 = 47136
	 006301
001010:		    
001010:		    aslb (R0)       ; [202] = 246
	 106310
001012:		    movb (R0), R3   ; R3 = 246 -> 177646
	 111003
001014:		    mov (R0), R4    ; R4 = [01 010 011 10 100 110 ] = 
	 011004
001016:		                    ;    = [0 101 001 110 100 110] = 051646
001016:		    
001016:		    halt
	 000000
