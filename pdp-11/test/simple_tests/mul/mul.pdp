; expected:
; r0=000202 r2=000000 r4=003477 sp=000000
; r1=000000 r3=143365 r5=143365 pc=001016
; psw=000001: cm=k pm=k pri=0      c [6]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Реализовать команду mul 
; Двоичный код: 0 111 000 rrr sss sss
; Формат ассемблера: mul src, reg
; Содержимое 16-битового регистра reg умножается на содержимое 
; 16-битового источника src, что дает 32-битовый результат в регистрах
; reg (старшие 16 бит) и reg|1 (младшие 16 бит).
; Если номер регистра reg нечетный (то есть reg == reg|1), то 
; результатом будет 16-битовый результат в reg, старшие 16 бит 
; результата будут потеряны. (Если произведение достаточно велико,
; чтобы в случае нечетного регистра терялись биты, то будет установлен
; бит С в PSW).
; С устанавливается, если произведение меньше -2**15 или больше 2**15 - 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Тест 0
; 123 * 456 = 60 752
; Тест 1 - реализован
; 12345 * 54321 = 717743365
; bin: 111001111111100011011110101
; bin: 0 000 011 100 111 111 % 1 100 011 011 110 101
; oct: 0   0   3   4   7   7   1   4   3   3   6   5
; Тест 2 (с переполнением)
; 123456*654321 = ‭105 742 446 216‬
; bin: ‭0010 % 0 010 111 110 001 010 % 0 100 110 010 001 110‬
; oct:   1  % 0   2   7   6   1   2 % 0   4   6   2   1   6
; bin: ‭00100010111110 001 010 0 100 110 010 001 110‬

    .=200
A:  .WORD  12345,  54321

    .=1000
    mov #A, R0      ; R0 = 200
    mov (R0)+, R3   ; R3 = 12345, R0 = 202
    mov R3, R4      ; R4 = 12345
    
    mul (R0), R3    ; R3 = 143365
    mul (R0), R4    ; R4=003477, R5 = 143365 (!!!)
    
    halt
