000000:		; expected:
000000:		; r0=000204 r2=153023 r4=000000 sp=000000
000000:		; r1=104712 r3=000000 r5=000000 pc=001024
000000:		; psw=000010: cm=k pm=k pri=0   n    [8]
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		; Реализовать команду ror и rorb 
000000:		; Двоичный код ror:  0 000 110 000 ddd ddd
000000:		; Формат ассемблера: ROR dst
000000:		; 17-битное "слово", состоящее из [флаг С, dst] циклически сдвигается
000000:		; на 1 бит вправо. 
000000:		; С оказывается в самом старшем бите dst.
000000:		; Самый младший бит dst оказывается в С.
000000:		; N, Z - как обычно
000000:		; V = N xor C
000000:		; Аналогично RORB
000000:		; Двоичный код rorb: 1 000 110 000 ddd ddd
000000:		; 9-битное "слово" состоит из [флаг С, dst]
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		; oct: 023451
000000:		; bin: 0 010 011 100 101 001
000000:		; test1 - rotate R1=123451 with C=0
000000:		; before: C-> 0 | 0 010 011 100 101 001 <- R1 023451
000000:		; test1:  C-> 1 | 0 001 001 110 010 100 <- R1 011624 ror R1
000000:		; test2:  C-> 0 | 1 000 100 111 001 010 <- R1 104712 ror R1
000000:		; test3 - rotate byte at 200 and then rotate byte at 201
000000:		; [202, 203] = 47, 254
000000:		; ror 202: C-> 0 00 100 111 <- 202 (before) 047
000000:		; ror 202: C-> 1 00 010 011 <- 202 (after)  023
000000:		; ror 203: C-> 1 10 101 100 <- 203 (before) 254
000000:		; rol 203: C-> 0 11 010 110 <- 203 (after)  326
000000:		; [203,202] =  [11 010 110] [00 010 011] = [1 101 011 000 010 011] = 153023
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		
000000:		    .=200
000200:		A:  .WORD  023451
	 023451
000202:		B:  .BYTE  47, 254
	    047
	 254
000204:		
000204:		    .=1000
001000:		    mov #A, R0      ; R0 = 200
	 012700
	 000200
001004:		    mov (R0)+, R1   ; R1 = 023451
	 012001
001006:		     
001006:		    ror R1          ; R1 = 047134
	 006001
001010:		    ror R1          ; R1 = 011624
	 006001
001012:		    
001012:		    rorb (R0)+      ; 023 - little
	 106020
001014:		    rorb (R0)+      ; 326 - big
	 106020
001016:		    
001016:		    mov @#B, R2     ; 153023
	 013702
	 000202
001022:		    
001022:		    halt
	 000000
