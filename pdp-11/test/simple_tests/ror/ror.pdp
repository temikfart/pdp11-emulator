; expected:
; r0=000204 r2=153023 r4=000000 sp=000000
; r1=104712 r3=000000 r5=000000 pc=001024
; psw=000010: cm=k pm=k pri=0   n    [8]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Реализовать команду ror и rorb 
; Двоичный код ror:  0 000 110 000 ddd ddd
; Формат ассемблера: ROR dst
; 17-битное "слово", состоящее из [флаг С, dst] циклически сдвигается
; на 1 бит вправо. 
; С оказывается в самом старшем бите dst.
; Самый младший бит dst оказывается в С.
; N, Z - как обычно
; V = N xor C
; Аналогично RORB
; Двоичный код rorb: 1 000 110 000 ddd ddd
; 9-битное "слово" состоит из [флаг С, dst]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; oct: 023451
; bin: 0 010 011 100 101 001
; test1 - rotate R1=123451 with C=0
; before: C-> 0 | 0 010 011 100 101 001 <- R1 023451
; test1:  C-> 1 | 0 001 001 110 010 100 <- R1 011624 ror R1
; test2:  C-> 0 | 1 000 100 111 001 010 <- R1 104712 ror R1
; test3 - rotate byte at 200 and then rotate byte at 201
; [202, 203] = 47, 254
; ror 202: C-> 0 00 100 111 <- 202 (before) 047
; ror 202: C-> 1 00 010 011 <- 202 (after)  023
; ror 203: C-> 1 10 101 100 <- 203 (before) 254
; rol 203: C-> 0 11 010 110 <- 203 (after)  326
; [203,202] =  [11 010 110] [00 010 011] = [1 101 011 000 010 011] = 153023
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    .=200
A:  .WORD  023451
B:  .BYTE  47, 254

    .=1000
    mov #A, R0      ; R0 = 200
    mov (R0)+, R1   ; R1 = 023451
     
    ror R1          ; R1 = 047134
    ror R1          ; R1 = 011624
    
    rorb (R0)+      ; 023 - little
    rorb (R0)+      ; 326 - big
    
    mov @#B, R2     ; 153023
    
    halt
